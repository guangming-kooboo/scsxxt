@model ServicePlatform.Areas.Wbs.ViewModels.CRUD.ChildNodeList_Check_M
@{
    Layout = ViewData["Layout"].ToString();
}

<div class="col-md-6">
    <!-- BEGIN SAMPLE FORM PORTLET-->
    <div class="portlet ">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-reorder"></i>@ViewBag.Title
            </div>
        </div>
        <div class="portlet-body form">
            <form class="form-horizontal" method="POST" role="form">
                <div class="form-body">

                    <input type="hidden" name="NodeID" value="@Model.NodeID" /><!--只是传表里面的主键 就好-->
                    @Html.HiddenFor(o=>o.NodeID)
                    <div class="form-group">
                        @Html.LabelFor(o => o._NodeName, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">

                            @Html.TextBoxFor(o => o._NodeName, new { @class="form-control",@readonly="readonly"})
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(o => o._Decription, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(o => o._Decription, new { @class="form-control",@readonly="readonly"})
                        </div>
                    </div>
                    @Html.Partial("/Views/Templates/_BootTimePicker.cshtml", new ViewDataDictionary(ViewData)
                                {
                                   { "id","BeginTime"},
                                   { "name","BeginTime"},
                                   { "value",Model._BeginTime},
                                   { "displayName","任务开始时间"}
                                })

                    @Html.Partial("/Views/Templates/_BootTimePicker.cshtml", new ViewDataDictionary(ViewData)
                                {
                                   { "id","EndTime"},
                                   { "name","EndTime"},
                                   { "value",Model._EndTime},
                                   { "displayName","任务结束时间"}
                                })

                    <div class="form-group">
                        <label class="col-md-3 control-label">任务地点</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(o => o._Place, new { @class="form-control",@readonly="readonly"})
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-3 control-label">任务比重</label>
                        <div class="col-md-9">
                            @Html.TextBoxFor(o => o._NodeWeight, new { @class="form-control",@readonly="readonly"})                      
                        </div>
                    </div>

                </div>
                <div class="form-actions fluid">
                    <div class="col-md-offset-3 col-md-9">
                        <button type="button" class="btn btn-default back">返回</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

